SELECT COUNT(DISTINCT artist)
FROM Spotify;

SELECT COUNT (*)
FROM Spotify;

SELECT DISTINCT album_type FROM Spotify;

SELECT MIN(duration_min) FROM Spotify


SELECT *
FROM Spotify
WHERE duration_min = 0;

DELETE 
FROM Spotify
WHERE duration_min = 0;

-- Easier Questions:
--1)Retrieve the names of all tracks with > 1 bil streams

SELECT track
FROM Spotify
WHERE stream > 1000000000;

--2) List all albums along with their respective artists

SELECT DISTINCT album, artist
FROM Spotify

--3)Calculate total # of comments for tracks where Licensed = true

SELECT COUNT(comments) as total_comments
FROM Spotify
WHERE Licensed = True;

--4)Find all tracks that belong to the album type "single"

SELECT track
FROM Spotify
WHERE album_type = 'single';


--5) Count total # of tracks by each artist

SELECT artist, count(*) num_tracks
FROM Spotify
GROUP BY Artist
ORDER BY num_tracks desc;


-- Medium Level
--1) Calculate avg danceability of tracks in each Album

SELECT album, AVG(danceability) boogie
FROM Spotify
FROUP BY album
ORDER BY boogie DESC;

--2)Find top 5 tracks with highest energy values

SELECT track, MIN(energyLiveness) pumped
FROM Spotify
GROUP BY track
ORDER BY pumped DESC
LIMIT 5;

--3)List all tracks along with view and likes where official_video = true

SELECT track, views, likes
FROM Spotify
WHERE official_video = True;

--4)For each artist and album, calculate total views of all tracks

SELECT artist, album, SUM(views) total_views
FROM Spotify
GROUP BY artist, album
ORDER BY total_views DESC;

--5)Retrieve the tracknames that have been streamed on Spotify more than YouTube

SELECT*
FROM ( SELECT track,
COALESCE(SUM(CASE WHEN most_playedon = 'Spotify' THEN stream END),0) streamed_on_spotify,
COALESCE(SUM(CASE WHEN most_playedon = 'Youtube' THEN stream END),0) streamed_on_youtube
FROM Spotify
GROUP BY track
) s
WHERE streamed_on_spotify > streamed_on_youtube
AND streamed_on_youtube != 0;


--Harder questions:
--1)Find top 3 most viewed tracks for each artist using Window Functions

WITH ranking_artist
AS
(SELECT artist, track,
SUM(views) as top_views,
DENSE_RANK() over(PARTITION BY artist ORDER BY SUM(views) DESC) as rank
FROM Spotify
GROUP BY 1, 2
ORDER BY 1, 3 desc
)
SELECT *
FROM ranking_artist
WHERE rank <= 3;


--2)Find tracks where the liveness score is above avg

SELECT track, artist, liveness
FROM Spotify
WHERE liveness > (SELECT AVG(liveness) as avg_liveness FROM Spotify);

--3)Use WITH clause to calculate the diff btwn highest and lowest energy values for tracks in each Album

WITH low_energy
AS (SELECT album, 
MAX(energyLiveness) as max_energy,
MAX(energyLiveness) as min_energy
FROM Spotify
GROUP BY 1
)
SELECT album, max_energy - min_energy as energy_diff
FROM low_energy
ORDER BY energy_diff DESC;

--4)Calculate the top album for every artist based on total views

WITH top_album
AS(
SELECT artist, album, SUM(views) as total_views,
DENSE_RANK() OVER(PARTITION BY artist ORDER BY SUM(views) DESC) as rank
FROM Spotify
GROUP BY 1,2
ORDER BY 1, 3 DESC
)
SELECT *
FROM top_album
WHERE rank = 1;



--5)Calculate the cumulative sum of likes for tracks ordered by # of views using Window Functions

SELECT track, views, SUM(likes) OVER (ORDER BY track) as running_total
FROM Spotify
ORDER BY 2 DESC;
